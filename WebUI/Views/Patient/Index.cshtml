@using Entities.Concrete;
@{
    ViewData["Title"] = "Index";
}
@section head {
    <!-- Global stylesheets -->
    <link href="~/content/Limitless-40/assets/icons/fontawesome/styles.min.css" rel="stylesheet" type="text/css">
    <!-- /global stylesheets -->
    <!-- Theme JS files -->
    <script src="~/content/Limitless-40/assets/js/jquery/jquery.min.js"></script>
    <!-- /theme JS files -->
}
@model Patient;
<div class="row">
    <div class="page-header page-header-light border rounded mb-3">
        <div class="page-header-content">
            <div class="page-title">
                <h5 class="mb-0">Hasta</h5>
                @if (Model != null)
                {
                    <div class="text-muted mt-1">@Model.FirstName @Model.LastName</div>
                }
                else
                {
                    <div class="text-muted mt-1">Kayıt Yok!</div>
                }
            </div>
        </div>

        <div class="page-header-content border-top border-top-primary border-top-width-2">
        </div>
    </div>
</div>

<div class="card card-body">
    <ul class="nav nav-tabs nav-tabs-highlight nav-justified mb-3">
        @if (User.IsInRole("Hasta Modülü » Hasta Ekranı.Read"))
        {
            <li class="nav-item">
                <a href="#js-tab1" class="nav-link active" data-bs-toggle="tab">
                    <i class="ph-user-circle me-2"></i>
                    Hasta
                </a>
            </li>
        }
        @if (User.IsInRole("Hasta Modülü » Tedavi Ekranı.Read"))
        {
            <li class="nav-item">
                <a href="#" class="nav-link ">
                    <i class="ph-user-circle me-2"></i>
                    Tedavi
                </a>
            </li>
        }
        @if (User.IsInRole("Hasta Modülü » Hesap Ekranı.Read"))
        {
            <li class="nav-item">
                <a href="#" class="nav-link ">
                    <i class="ph-user-circle me-2"></i>
                    Hesap
                </a>
            </li>
        }
        @if (User.IsInRole("Hasta Modülü » Fatura Ekranı.Read"))
        {
            <li class="nav-item">
                <a href="#" class="nav-link ">
                    <i class="ph-user-circle me-2"></i>
                    Fatura
                </a>
            </li>
        }
        @if (User.IsInRole("Hasta Modülü » Reçete Ekranı.Read"))
        {
            <li class="nav-item">
                <a href="#" class="nav-link ">
                    <i class="ph-user-circle me-2"></i>
                    Reçete
                </a>
            </li>
        }
        @if (User.IsInRole("Hasta Modülü » Görüntü Ekranı.Read"))
        {
            <li class="nav-item">
                <a href="#" class="nav-link ">
                    <i class="ph-user-circle me-2"></i>
                    Görüntü
                </a>
            </li>
        }
        @if (User.IsInRole("Hasta Modülü » Randevu Ekranı.Read"))
        {
            <li class="nav-item">
                <a href="#" class="nav-link ">
                    <i class="ph-user-circle me-2"></i>
                    Randevu
                </a>
            </li>
        }
    </ul>

    @if (User.IsInRole("Hasta Modülü » Hasta Ekranı.Read"))
    {

        <div class="tab-content">
            <div class="tab-pane fade show active" id="js-tab1">
                @*tab içerik başlangış*@
                <div class="col-xs-12 col-sm-12 col-md-12">
                    <div class="buton-grup d-flex justify-content-end">
                        <button type="button" id="btn-back" class="btn btn-outline-dark" style="display: none;">
                            <i class="fa fa-undo"></i> <span class="hidden-xs">Geri Al</span>
                        </button>
                        @if (User.IsInRole("Hasta Modülü » Hasta Ekranı.Create"))
                        {
                            <button id="btn-new" class="btn btn-outline-primary" style="margin-left: 10px;"><i class="fa fa-plus"></i> <span class="hidden-xs">Yeni</span></button>
                        }
                        @if (User.IsInRole("Hasta Modülü » Hasta Ekranı.Delete"))
                        {
                            <button type="button" id="btn-delete" class="btn btn-outline-danger" style="margin-left: 10px;">
                                <i class="fa fa-trash"></i>
                                <span class="hidden-xs">Sil</span>
                            </button>
                        }
                        @if (User.IsInRole("Hasta Modülü » Hasta Ekranı.Update"))
                        {
                            <button type="button" id="btn-update" class="btn btn-outline-warning" style="margin-left: 10px;"><i class="fa fa-pencil-alt"></i> <span class="hidden-xs">Düzenle</span></button>
                        }
                        @if (User.IsInRole("Hasta Modülü » Hasta Ekranı.Create") || User.IsInRole("Hasta Modülü » Hasta Ekranı.Update"))
                        {
                            <button type="button" id="btn-save" class="btn btn-outline-success" disabled="disabled" style="margin-left: 10px;"><i class="fa fa-save"></i> <span class="hidden-xs">Kaydet</span></button>
                        }
                    </div>
                </div>
                &nbsp;&nbsp;
                <div class="row patient-index-widget">
                    @*@await Component.InvokeAsync("PatientIndex", new { patientId = ViewBag.PatientId });*@
                </div>
                @*tab içerik bitiş*@
            </div>
        </div>

    }
</div>
<script>
    $(document).ready(function myfunction() {
        $.ajax({
            type: "GET",
            url: "/Patient/PatientIndexReadWidget",
            data: { patientId: "6b25f39f-c6ca-4b63-9539-eb693b65e38c" },
            success: function myfunction(veri) {
                $(".patient-index-widget").html('');
                $(".patient-index-widget").html(veri);
            },
            error: function myfunction(veri) {
                alert("error");
            }
        });
        $("#btn-new").click(function () {
            $.ajax({
                type: "GET",
                url: "/Patient/PatientIndexNewWidget",                
                success: function myfunction(data) {
                    $(".patient-index-widget").html('');
                    $(".patient-index-widget").html(data);
                    $("#btn-back").data("btn", "btn-new");
                    $('#btn-back').show();
                    $("#btn-save").prop("disabled", false);
                    $("#btn-update").prop("disabled", true);
                    $("#btn-delete").prop("disabled", true);
                    $("#btn-new").prop("disabled", true);
                },
                error: function myfunction(xhr, status, error) {
                    if (xhr.status == 403) {
                        alert("Yetkiniz Bulunmamaktadır. Yöneticinizle görüşün.");
                    }
                }
            });
        });
        $("#btn-back").click(function () {
            var whbtn = $("#btn-back").data("btn");
            if (whbtn == "btn-new") {
                $.ajax({
                    type: "GET",
                    url: "/Patient/PatientIndexReadWidget",
                    data: { patientId: "6b25f39f-c6ca-4b63-9539-eb693b65e38c" },
                    success: function myfunction(veri) {
                        $(".patient-index-widget").html('');
                        $(".patient-index-widget").html(veri);
                        $('#btn-back').hide();
                        $("#btn-save").prop("disabled", true);
                        $("#btn-update").prop("disabled", false);
                        $("#btn-delete").prop("disabled", false);
                        $("#btn-new").prop("disabled", false);
                    },
                    error: function myfunction(veri) {
                        alert("error");
                    }
                });
            }
            if (whbtn == "btn-update") {
                $('#btn-back').hide();
                $("#btn-save").prop("disabled", true);
                $("#btn-update").prop("disabled", false);
                $("#btn-delete").prop("disabled", false);
                $("#btn-new").prop("disabled", false);
                $(".patient-index-input:input").prop("disabled", true);
            }
        });
        $("#btn-delete").click(function () {
            alert("Delete");
        });
        $("#btn-update").click(function () {
            $("#btn-back").data("btn", "btn-update");
            $('#btn-back').show();
            $("#btn-save").prop("disabled", false);
            $("#btn-update").prop("disabled", true);
            $("#btn-delete").prop("disabled", true);
            $("#btn-new").prop("disabled", true);
            $(".patient-index-input:input").prop("disabled", false);
        });
        $("#btn-save").click(function () {
            alert("save");
        });
    });
</script>